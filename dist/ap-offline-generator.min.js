"use strict";angular.module("angularPoint").controller("generateOfflineCtrl",["$scope","$q","apDataService","apConfig","apDebugService","toastr",function(a,b,c,d,e,f){a.operations=["GetListItemChangesSinceToken","GetListItems"],a.state={availableListFields:[],fileName:"",itemLimit:0,operation:a.operations[0],query:"",selectedList:"",selectedListFields:[],siteUrl:d.defaultUrl,xmlResponse:""},a.listCollection=[],a.getLists=function(){c.getCollection({operation:"GetListCollection",webURL:a.state.siteUrl}).then(function(b){a.listCollection.push.apply(a.listCollection,b),f.info(a.listCollection.length+" lists/libraries identified.")})},a.getLists(),a.getXML=function(){a.listCollection.length=0,a.state.xmlResponse="";var b={operation:a.state.operation,listName:a.state.selectedList.ID,CAMLRowLimit:a.state.itemLimit,offlineXML:d.offlineXML+a.state.fileName,webURL:a.state.siteUrl};a.state.selectedListFields.length>0&&(b.CAMLViewFields="<ViewFields>",_.each(a.state.selectedListFields,function(a){b.CAMLViewFields+="<FieldRef Name='"+a+"' />"}),b.CAMLViewFields+="</ViewFields>"),a.state.query.length>0&&(b.CAMLQuery=a.state.query),c.serviceWrapper(b).then(function(b){a.state.xmlResponse=(new XMLSerializer).serializeToString(b)})},a.onTextClick=function(a){a.target.select()},a.lookupListFields=function(){console.log("Looking up List Fields"),a.state.availableListFields.length=0,a.state.selectedListFields.length=0,_.isObject(a.state.selectedList)&&a.state.selectedList.Title?c.getListFields({listName:a.state.selectedList.Name}).then(function(b){a.state.availableListFields.push.apply(a.state.availableListFields,b),f.info(a.state.availableListFields.length+" fields found.")}):f.error("Please ensure a list is selected before preceding.")},a.saveXML=function(){e.saveXML(a.state.xmlResponse,a.state.fileName)},a.$watch("state.selectedList",function(b){b&&(a.state.fileName=a.state.selectedList.Title.replace(" ","")+".xml",a.lookupListFields(),console.log(b))})}]),angular.module("angularPoint").run(["$templateCache",function(a){a.put("bower_components/angular-point-offline-generator/src/ap-offline-generator-view.html",'<div class=container><h3>Offline XML Generator</h3><p>Fill in the basic information for a list and make the request to SharePoint. The xml response will appear at the bottom of the page where you can then copy by Ctrl + A.</p><hr><form role=form><div class=form-group><label>Site URL</label><div class=input-group><input type=url class=form-control ng-model=state.siteUrl> <span class=input-group-btn><button title="Refresh list/libraries" class="btn btn-success" type=button ng-click=getLists()><i class="fa fa-refresh"></i></button></span></div></div><div class=row><div class=col-xs-5><div class=form-group><label>List Name or GUID</label><select ng-model=state.selectedList ng-options="list.Title for list in listCollection" class=form-control></select></div></div><div class=col-xs-3><div class=form-group><label>Number of Items to Return</label><input type=number class=form-control ng-model=state.itemLimit><p class=help-block>[0 = All Items]</p></div></div><div class=col-xs-4><div class=form-group><label>Operation</label><select class=form-control ng-model=state.operation ng-options="operation for operation in operations"></select><p class=help-block>Operation to query with.</p></div></div></div><div class=row><div class=col-xs-12><div class=form-group><label>Selected Fields</label><select multiple ui-select2 ng-model=state.selectedListFields style="width: 100%" ng-disabled="listCollection.length < 1 || !state.selectedList"><option ng-repeat="field in state.availableListFields" value={{field.Name}}>{{ field.Name }}</option></select><p class=help-block>Leaving this blank will return all fields visible in the default list view.</p></div></div></div><div class=form-group><label>CAML Query (Optional)</label><textarea class=form-control ng-model=state.query rows=3></textarea></div><div class=row><div class=col-xs-6><div class=form-group><button type=submit class="btn btn-primary" ng-click=getXML()>Make Request</button></div></div><div class=col-xs-6><fieldset ng-disabled="state.xmlResponse.length < 1"><div class=form-group><div class=input-group><input class=form-control ng-model=state.fileName> <span class=input-group-btn><button class="btn btn-success" ng-click=saveXML()>Save XML</button></span></div></div></fieldset></div></div><br><hr><h4>XML Response</h4><ol><li>Create a new offline file under the identified in apConfig.offlineXML (defaults to: "app/dev")</li><li>Use the same name as found in the model at "model.list.title" + .xml</li><li>Select the returned XML below by clicking in the textarea.</li><li>Add the XML to the newly created offline .xml file.</li></ol><div class="well well-sm"><textarea name=xmlResponse class=form-control cols=30 rows=10 ng-model=state.xmlResponse ng-click=onTextClick($event)></textarea></div></form></div>')}]);